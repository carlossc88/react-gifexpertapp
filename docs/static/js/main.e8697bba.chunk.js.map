{"version":3,"sources":["components/AddCategorias.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorias","setCategorys","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","className","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","img","class","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","role","image","key","GifExpertApp","categorys","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAgB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAW/C,OACI,0BAAMC,SATS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAa,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OAClCN,EAAc,OAOd,2BACIO,KAAK,OACLC,UAAU,eACVC,MAAQV,EACRW,SAAW,SAACR,GAAD,OAAMF,EAAcE,EAAES,OAAOF,Y,uBCpB3CG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAECI,MAAOF,GAFR,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARnB,kBAWXM,GAXW,4CAAH,sDCANO,EAAc,SAAC,GAAW,IAAVC,EAAS,EAATA,IAEzB,OAEI,yBAAKC,MAAM,YACP,yBAAKA,MAAM,0CACP,yBAAKC,IAAKF,EAAId,IAAKe,MAAM,eAAeE,IAAKH,EAAIJ,QACjD,yBAAKK,MAAM,aACP,wBAAIA,MAAM,cAAcD,EAAIJ,WCNnCQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPzB,EAAOC,GACFyB,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGvB,CAACrB,IAEIsB,EDdyBK,CAAa3B,GAAhCa,EAFsB,EAE5BN,KAAcc,EAFc,EAEdA,QAErB,OACQ,oCAGKA,EACG,yBAAKJ,MAAM,iBAAiBW,KAAK,UAC7B,0BAAMX,MAAM,WAAZ,eAEJ,wBAAItB,UAAU,qCAAqCK,GAGvD,yBAAKL,UAAU,gBAEHkB,EAAOJ,KAAI,SAACoB,GAAD,OACX,kBAAC,EAAD,CAAab,IAAKa,EAAOC,IAAKD,EAAMlB,WElBnDoB,EAAe,WAAO,IAAD,EAEI9C,mBAAS,IAFb,mBAEvB+C,EAFuB,KAEZhD,EAFY,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAeA,aAAcA,IAC7B,6BACA,6BAEQgD,EAAUvB,KAAK,SAACT,GAAD,OAAc,kBAAC,EAAD,CAASA,SAAUA,EAAU8B,IAAK9B,UCVnFiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.e8697bba.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategorias = ( {setCategorys} ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategorys(c => [inputValue, ...c]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handSubmit}>\r\n            {/* <h2>{inputValue}</h2> */}\r\n            <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value= {inputValue}\r\n                onChange= {(e)=> setInputValue(e.target.value)}\r\n                // placeholder=\"hola mundo\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategorias.propTypes = {\r\n    setCategorys: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGif = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=a6lkc8jeG0a2Zt0QzLWwEAQ8KImSSRxM`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(gif => {\r\n       return {\r\n        id: gif.id,\r\n        title: gif.title,\r\n        url: gif.images.downsized_medium.url\r\n       }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n\r\n    return (\r\n\r\n        <div class=\"col mb-4\">\r\n            <div class=\"card animate__animated animate__fadeIn\">\r\n                <img src={img.url} class=\"card-img-top\" alt={img.title}/>\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">{img.title}</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n            <>\r\n                \r\n\r\n                {loading ? \r\n                    <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>:\r\n                    <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n                }\r\n\r\n                <div className=\"card-columns\">\r\n                        {\r\n                            images.map((image) => (\r\n                            <GifGridItem img={image} key={image.id}/> \r\n                            ))\r\n                        }\r\n                </div>\r\n            </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGif } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGif(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    },[category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategorias } from './components/AddCategorias';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categorys, setCategorys] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategorias setCategorys={setCategorys} />\r\n            <hr />\r\n            <div>\r\n                {\r\n                    categorys.map( (category) => <GifGrid category={category} key={category} />)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}